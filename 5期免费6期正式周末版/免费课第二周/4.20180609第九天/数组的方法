// 1. 方法的作用
// 2. 方法的返回值
// 3. 方法的参数
// 4. 原有数组是否改变；

1.push
   1) : 向数组的末尾新增一项
   2) : 返回值是新增一项之后数组的length的属性值；
   3) : 参数可以是一个或者多个
   4) : 原有数组发生变化；
2.pop
   1) : 删除数组的最后一项
   2) : 返回删除的那一项的值
   3) : 不需要参数
   4) : 原有数组发生变化
3.unshift
   1) : 在数组最前面新增一项
   2) :  返回值是新增一项之后数组的length的属性值；
   3): 需要参数
   4) : 原有发生变化
4. shift
   1) ：删除第一项
   2): 返回值是删除的那一项
   3): 不需要传参数
   4): 原有数组发生变化；
5.splice
   1): 删除数组中某几项；（新增，修改）
   2):返回值是删除的那几项；
   3):
      splice(m): 从索引m开始，删除到末尾；
      splice(m,n): 从索引m开始，删除n个；
      splice(m,x,n):  从索引m开始，删除x个，用n替换；
   4) 原有数组发生变化
7.sort
   1): 排序
   2): 返回值是排序后的数组
   3): ary.sort(function(a,b){return a-b}); 从小到大排序
       ary.sort(function(a,b){return b-a}); 从大到小排序
   4): 原有数组发生变化;
8.reverse :
    1) :数组的倒序
    2）: 返回值是顺序倒过来之后的数组
    3) : 不需要传参数
    4) : 原有数组发生变化
6.slice(m,n)
   1) : 数组的截取
   2) : slice(m,n)返回值是从索引m开始，截取到索引n这一项，但是不包含n对应的这一项；【前包后不包】
        slice(m) : 从索引m开始截取到数组的末尾；
   3) : 需要参数，参数支持负数；
   4) : 原有数组不发生改变；

9.concat :
    1) : 数组的拼接
    2) : 函数返回值是拼接完成之后的数组；
    3) : 没有参数，就是数组的克隆
         有参数，数组的拼接；把参数值拼接到数组的末尾；
    4): 原有数组不发生改变
10.indexOf
    1) : 检测数组成员的索引位置
    2) : 返回数组成员第一次出现的索引位置；如果不存在，那么返回就是-1；
    3) : 数组成员项
    4）： 原有数组不变；

11.lastIndexOf
    1) : 检测数组成员的索引位置
    2) : 返回数组成员最后一次出现的索引位置；如果不存在，那么返回就是-1；
    3) : 数组成员项
    4）： 原有数组不变；
12.join
    1) : 把数组按照特定字符拼接起来成一个字符串；
    2): 返回值是一个拼接后的字符串
    3): 特定的字符
    4): 原有数组不发生改变；
13. map
    1) : 映射；遍历
    2) : 映射之后的数组

14.forEach :
   1) : 遍历
   2): 返回值undefined;
   3): 回调函数
15.toString
   1): 转字符串；
   2) 转之后的字符串
   3）： 不需要参数；


// filter  every   reduce  includes  find;

